

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Patient_Main : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Patient_Main entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Patient_Main()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Patient_Main(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Patient_Main> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Patient_Main.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patient_Main_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patient_Main_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ID1
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.ID1);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.ID1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Last_Name
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Last_Name);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Last_Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Last_Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Last_Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Last_Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string First_Name
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.First_Name);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.First_Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void First_Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void First_Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void First_Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MR
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.MR);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.MR, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MR_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MR_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MR_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Age
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Age);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Age, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Age_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Age_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Age_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Admit_Date
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Admit_Date);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Admit_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Admit_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Admit_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Admit_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Floor
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Floor);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Floor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Floor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Floor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Floor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Bed
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Bed);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Bed, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Staff
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Staff);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Staff, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Staff_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Staff_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Staff_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Op_Res
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Op_Res);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Op_Res, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Op_Res_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Op_Res_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Op_Res_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Op_Res_2
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Op_Res_2);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Op_Res_2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Op_Res_2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Op_Res_2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Op_Res_2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Consult_Inpatient
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Consult_Inpatient);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Consult_Inpatient, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Consult_Inpatient_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Consult_Inpatient_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Consult_Inpatient_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Diagnosis
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Diagnosis);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Diagnosis, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Diagnosis_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Diagnosis_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Diagnosis_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Procedures
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Procedures);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Procedures, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedures_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedures_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedures_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Note
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Note);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Note, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Note_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Note_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Note_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Discharged
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Discharged);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Discharged, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Discharged_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Discharged_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Discharged_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Discharge_Date
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Discharge_Date);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Discharge_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Discharge_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Discharge_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Discharge_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Complication
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Complication__1
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication__1);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication__1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication__1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication__1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication__1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Complication__2
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication__2);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication__2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication__2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication__2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication__2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Complication_Description
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication_Description);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication_Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication_Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication_Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Complication_Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Research_Pt
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Research_Pt);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Research_Pt, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Research_Pt_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Research_Pt_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Research_Pt_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool M___M
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.M___M);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.M___M, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void M___M_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void M___M_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void M___M_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> FT
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.FT);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.FT, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FT_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FT_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FT_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool TBI
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.TBI);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.TBI, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TBI_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TBI_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TBI_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool TBI_f_u_complete
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.TBI_f_u_complete);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.TBI_f_u_complete, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TBI_f_u_complete_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TBI_f_u_complete_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TBI_f_u_complete_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PCP
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.PCP);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.PCP, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PCP_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PCP_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PCP_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address_line__1
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Address_line__1);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Address_line__1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_line__1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_line__1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_line__1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address_line__2
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Address_line__2);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Address_line__2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_line__2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_line__2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_line__2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address_line__3
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Address_line__3);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Address_line__3, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_line__3_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_line__3_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_line__3_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Preferred_1
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Preferred_1);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Preferred_1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferred_1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferred_1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferred_1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string E_mail
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.E_mail);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.E_mail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void E_mail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void E_mail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void E_mail_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Preferred_2
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Preferred_2);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Preferred_2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferred_2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferred_2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferred_2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Tel
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Tel);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Tel, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tel_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tel_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tel_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Preferred_3
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Preferred_3);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Preferred_3, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferred_3_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferred_3_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferred_3_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Referring_Phys
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Referring_Phys);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Referring_Phys, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Referring_Phys_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Referring_Phys_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Referring_Phys_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BC_notes
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.BC_notes);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.BC_notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BC_notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BC_notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BC_notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string KJB_notes
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.KJB_notes);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.KJB_notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KJB_notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KJB_notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KJB_notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool PCP_f_u_done
        {
            get
            {
                return global::LightSwitchApplication.Patient_Main.DetailsClass.GetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.PCP_f_u_done);
            }
            set
            {
                global::LightSwitchApplication.Patient_Main.DetailsClass.SetValue(this, global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.PCP_f_u_done, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PCP_f_u_done_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PCP_f_u_done_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PCP_f_u_done_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Patient_Main,
                global::LightSwitchApplication.Patient_Main.DetailsClass,
                global::LightSwitchApplication.Patient_Main.DetailsClass.IImplementation,
                global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.ID1;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass>.Entry
                __Patient_MainEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass>.Entry(
                    global::LightSwitchApplication.Patient_Main.DetailsClass.__Patient_Main_CreateNew,
                    global::LightSwitchApplication.Patient_Main.DetailsClass.__Patient_Main_Created,
                    global::LightSwitchApplication.Patient_Main.DetailsClass.__Patient_Main_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Patient_Main __Patient_Main_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Patient_Main> es)
            {
                return new global::LightSwitchApplication.Patient_Main(es);
            }
            private static void __Patient_Main_Created(global::LightSwitchApplication.Patient_Main e)
            {
                e.Patient_Main_Created();
            }
            private static bool __Patient_Main_AllowSaveWithErrors(global::LightSwitchApplication.Patient_Main e)
            {
                bool result = false;
                e.Patient_Main_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>> ID1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.ID1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Last_Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Last_Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> First_Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.First_Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> MR
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.MR) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Age
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Age) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>> Admit_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Admit_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Floor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Floor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>> Bed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Bed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Staff
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Staff) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Op_Res
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Op_Res) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Op_Res_2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Op_Res_2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Consult_Inpatient
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Consult_Inpatient) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Diagnosis
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Diagnosis) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Procedures
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Procedures) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Note
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Note) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool> Discharged
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Discharged) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>> Discharge_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Discharge_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool> Complication
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Complication__1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication__1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Complication__2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication__2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Complication_Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Complication_Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Research_Pt
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Research_Pt) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool> M___M
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.M___M) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>> FT
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.FT) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool> TBI
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.TBI) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool> TBI_f_u_complete
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.TBI_f_u_complete) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> PCP
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.PCP) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Address_line__1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Address_line__1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Address_line__2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Address_line__2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Address_line__3
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Address_line__3) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool> Preferred_1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Preferred_1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> E_mail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.E_mail) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool> Preferred_2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Preferred_2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Tel
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Tel) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool> Preferred_3
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Preferred_3) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> Referring_Phys
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.Referring_Phys) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> BC_notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.BC_notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string> KJB_notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.KJB_notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool> PCP_f_u_done
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties.PCP_f_u_done) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Nullable<int> ID1 { get; set; }
                new string Last_Name { get; set; }
                new string First_Name { get; set; }
                new string MR { get; set; }
                new string Age { get; set; }
                new global::System.Nullable<global::System.DateTime> Admit_Date { get; set; }
                new string Floor { get; set; }
                new global::System.Nullable<int> Bed { get; set; }
                new string Staff { get; set; }
                new string Op_Res { get; set; }
                new string Op_Res_2 { get; set; }
                new string Consult_Inpatient { get; set; }
                new string Diagnosis { get; set; }
                new string Procedures { get; set; }
                new string Note { get; set; }
                new bool Discharged { get; set; }
                new global::System.Nullable<global::System.DateTime> Discharge_Date { get; set; }
                new bool Complication { get; set; }
                new string Complication__1 { get; set; }
                new string Complication__2 { get; set; }
                new string Complication_Description { get; set; }
                new string Research_Pt { get; set; }
                new bool M___M { get; set; }
                new string Status { get; set; }
                new global::System.Nullable<int> FT { get; set; }
                new bool TBI { get; set; }
                new bool TBI_f_u_complete { get; set; }
                new string PCP { get; set; }
                new string Address_line__1 { get; set; }
                new string Address_line__2 { get; set; }
                new string Address_line__3 { get; set; }
                new bool Preferred_1 { get; set; }
                new string E_mail { get; set; }
                new bool Preferred_2 { get; set; }
                new string Tel { get; set; }
                new bool Preferred_3 { get; set; }
                new string Referring_Phys { get; set; }
                new string BC_notes { get; set; }
                new string KJB_notes { get; set; }
                new bool PCP_f_u_done { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Entry
                    ID1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ID1",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._ID1_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._ID1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._ID1_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._ID1_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._ID1_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._ID1_OnValueChanged);
                private static void _ID1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._ID1, sf);
                }
                private static bool _ID1_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.ID1_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID1_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID1_Validate(r);
                }
                private static global::System.Nullable<int> _ID1_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.ID1;
                }
                private static void _ID1_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ID1 = v;
                }
                private static void _ID1_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.ID1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Last_Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Last_Name",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Last_Name_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Last_Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Last_Name_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Last_Name_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Last_Name_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Last_Name_OnValueChanged);
                private static void _Last_Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Last_Name, sf);
                }
                private static bool _Last_Name_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Last_Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Last_Name_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Last_Name_Validate(r);
                }
                private static string _Last_Name_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Last_Name;
                }
                private static void _Last_Name_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Last_Name = v;
                }
                private static void _Last_Name_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Last_Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    First_Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "First_Name",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._First_Name_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._First_Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._First_Name_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._First_Name_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._First_Name_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._First_Name_OnValueChanged);
                private static void _First_Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._First_Name, sf);
                }
                private static bool _First_Name_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.First_Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _First_Name_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.First_Name_Validate(r);
                }
                private static string _First_Name_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.First_Name;
                }
                private static void _First_Name_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.First_Name = v;
                }
                private static void _First_Name_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.First_Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    MR = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "MR",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._MR_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._MR_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._MR_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._MR_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._MR_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._MR_OnValueChanged);
                private static void _MR_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._MR, sf);
                }
                private static bool _MR_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.MR_IsReadOnly(ref result);
                    return result;
                }
                private static void _MR_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MR_Validate(r);
                }
                private static string _MR_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.MR;
                }
                private static void _MR_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MR = v;
                }
                private static void _MR_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.MR_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Age = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Age",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Age_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Age_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Age_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Age_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Age_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Age_OnValueChanged);
                private static void _Age_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Age, sf);
                }
                private static bool _Age_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Age_IsReadOnly(ref result);
                    return result;
                }
                private static void _Age_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Age_Validate(r);
                }
                private static string _Age_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Age;
                }
                private static void _Age_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Age = v;
                }
                private static void _Age_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Age_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Admit_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Admit_Date",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Admit_Date_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Admit_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Admit_Date_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Admit_Date_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Admit_Date_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Admit_Date_OnValueChanged);
                private static void _Admit_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Admit_Date, sf);
                }
                private static bool _Admit_Date_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Admit_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _Admit_Date_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Admit_Date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Admit_Date_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Admit_Date;
                }
                private static void _Admit_Date_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Admit_Date = global::LightSwitchApplication.Patient_Main.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Admit_Date_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Admit_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Floor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Floor",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Floor_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Floor_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Floor_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Floor_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Floor_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Floor_OnValueChanged);
                private static void _Floor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Floor, sf);
                }
                private static bool _Floor_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Floor_IsReadOnly(ref result);
                    return result;
                }
                private static void _Floor_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Floor_Validate(r);
                }
                private static string _Floor_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Floor;
                }
                private static void _Floor_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Floor = v;
                }
                private static void _Floor_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Floor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Entry
                    Bed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Bed",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Bed_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Bed_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Bed_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Bed_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Bed_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Bed_OnValueChanged);
                private static void _Bed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Bed, sf);
                }
                private static bool _Bed_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Bed_IsReadOnly(ref result);
                    return result;
                }
                private static void _Bed_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Bed_Validate(r);
                }
                private static global::System.Nullable<int> _Bed_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Bed;
                }
                private static void _Bed_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Bed = v;
                }
                private static void _Bed_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Bed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Staff = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Staff",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Staff_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Staff_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Staff_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Staff_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Staff_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Staff_OnValueChanged);
                private static void _Staff_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Staff, sf);
                }
                private static bool _Staff_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Staff_IsReadOnly(ref result);
                    return result;
                }
                private static void _Staff_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Staff_Validate(r);
                }
                private static string _Staff_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Staff;
                }
                private static void _Staff_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Staff = v;
                }
                private static void _Staff_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Staff_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Op_Res = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Op_Res",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_OnValueChanged);
                private static void _Op_Res_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Op_Res, sf);
                }
                private static bool _Op_Res_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Op_Res_IsReadOnly(ref result);
                    return result;
                }
                private static void _Op_Res_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Op_Res_Validate(r);
                }
                private static string _Op_Res_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Op_Res;
                }
                private static void _Op_Res_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Op_Res = v;
                }
                private static void _Op_Res_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Op_Res_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Op_Res_2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Op_Res_2",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_2_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_2_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_2_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_2_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Op_Res_2_OnValueChanged);
                private static void _Op_Res_2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Op_Res_2, sf);
                }
                private static bool _Op_Res_2_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Op_Res_2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Op_Res_2_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Op_Res_2_Validate(r);
                }
                private static string _Op_Res_2_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Op_Res_2;
                }
                private static void _Op_Res_2_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Op_Res_2 = v;
                }
                private static void _Op_Res_2_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Op_Res_2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Consult_Inpatient = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Consult_Inpatient",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Consult_Inpatient_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Consult_Inpatient_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Consult_Inpatient_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Consult_Inpatient_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Consult_Inpatient_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Consult_Inpatient_OnValueChanged);
                private static void _Consult_Inpatient_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Consult_Inpatient, sf);
                }
                private static bool _Consult_Inpatient_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Consult_Inpatient_IsReadOnly(ref result);
                    return result;
                }
                private static void _Consult_Inpatient_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Consult_Inpatient_Validate(r);
                }
                private static string _Consult_Inpatient_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Consult_Inpatient;
                }
                private static void _Consult_Inpatient_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Consult_Inpatient = v;
                }
                private static void _Consult_Inpatient_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Consult_Inpatient_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Diagnosis = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Diagnosis",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Diagnosis_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Diagnosis_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Diagnosis_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Diagnosis_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Diagnosis_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Diagnosis_OnValueChanged);
                private static void _Diagnosis_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Diagnosis, sf);
                }
                private static bool _Diagnosis_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Diagnosis_IsReadOnly(ref result);
                    return result;
                }
                private static void _Diagnosis_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Diagnosis_Validate(r);
                }
                private static string _Diagnosis_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Diagnosis;
                }
                private static void _Diagnosis_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Diagnosis = v;
                }
                private static void _Diagnosis_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Diagnosis_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Procedures = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Procedures",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Procedures_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Procedures_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Procedures_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Procedures_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Procedures_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Procedures_OnValueChanged);
                private static void _Procedures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Procedures, sf);
                }
                private static bool _Procedures_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Procedures_IsReadOnly(ref result);
                    return result;
                }
                private static void _Procedures_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Procedures_Validate(r);
                }
                private static string _Procedures_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Procedures;
                }
                private static void _Procedures_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Procedures = v;
                }
                private static void _Procedures_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Procedures_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Note = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Note",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Note_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Note_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Note_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Note_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Note_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Note_OnValueChanged);
                private static void _Note_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Note, sf);
                }
                private static bool _Note_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Note_IsReadOnly(ref result);
                    return result;
                }
                private static void _Note_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Note_Validate(r);
                }
                private static string _Note_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Note;
                }
                private static void _Note_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Note = v;
                }
                private static void _Note_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Note_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry
                    Discharged = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry(
                        "Discharged",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharged_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharged_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharged_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharged_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharged_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharged_OnValueChanged);
                private static void _Discharged_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Discharged, sf);
                }
                private static bool _Discharged_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Discharged_IsReadOnly(ref result);
                    return result;
                }
                private static void _Discharged_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Discharged_Validate(r);
                }
                private static bool _Discharged_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Discharged;
                }
                private static void _Discharged_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Discharged = v;
                }
                private static void _Discharged_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Discharged_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Discharge_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Discharge_Date",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharge_Date_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharge_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharge_Date_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharge_Date_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharge_Date_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Discharge_Date_OnValueChanged);
                private static void _Discharge_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Discharge_Date, sf);
                }
                private static bool _Discharge_Date_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Discharge_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _Discharge_Date_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Discharge_Date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Discharge_Date_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Discharge_Date;
                }
                private static void _Discharge_Date_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Discharge_Date = global::LightSwitchApplication.Patient_Main.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Discharge_Date_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Discharge_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry
                    Complication = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry(
                        "Complication",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_OnValueChanged);
                private static void _Complication_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Complication, sf);
                }
                private static bool _Complication_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Complication_IsReadOnly(ref result);
                    return result;
                }
                private static void _Complication_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Complication_Validate(r);
                }
                private static bool _Complication_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Complication;
                }
                private static void _Complication_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Complication = v;
                }
                private static void _Complication_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Complication_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Complication__1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Complication__1",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__1_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__1_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__1_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__1_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__1_OnValueChanged);
                private static void _Complication__1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Complication__1, sf);
                }
                private static bool _Complication__1_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Complication__1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Complication__1_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Complication__1_Validate(r);
                }
                private static string _Complication__1_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Complication__1;
                }
                private static void _Complication__1_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Complication__1 = v;
                }
                private static void _Complication__1_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Complication__1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Complication__2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Complication__2",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__2_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__2_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__2_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__2_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication__2_OnValueChanged);
                private static void _Complication__2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Complication__2, sf);
                }
                private static bool _Complication__2_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Complication__2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Complication__2_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Complication__2_Validate(r);
                }
                private static string _Complication__2_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Complication__2;
                }
                private static void _Complication__2_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Complication__2 = v;
                }
                private static void _Complication__2_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Complication__2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Complication_Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Complication_Description",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_Description_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_Description_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_Description_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_Description_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Complication_Description_OnValueChanged);
                private static void _Complication_Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Complication_Description, sf);
                }
                private static bool _Complication_Description_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Complication_Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Complication_Description_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Complication_Description_Validate(r);
                }
                private static string _Complication_Description_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Complication_Description;
                }
                private static void _Complication_Description_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Complication_Description = v;
                }
                private static void _Complication_Description_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Complication_Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Research_Pt = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Research_Pt",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Research_Pt_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Research_Pt_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Research_Pt_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Research_Pt_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Research_Pt_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Research_Pt_OnValueChanged);
                private static void _Research_Pt_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Research_Pt, sf);
                }
                private static bool _Research_Pt_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Research_Pt_IsReadOnly(ref result);
                    return result;
                }
                private static void _Research_Pt_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Research_Pt_Validate(r);
                }
                private static string _Research_Pt_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Research_Pt;
                }
                private static void _Research_Pt_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Research_Pt = v;
                }
                private static void _Research_Pt_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Research_Pt_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry
                    M___M = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry(
                        "M___M",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._M___M_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._M___M_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._M___M_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._M___M_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._M___M_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._M___M_OnValueChanged);
                private static void _M___M_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._M___M, sf);
                }
                private static bool _M___M_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.M___M_IsReadOnly(ref result);
                    return result;
                }
                private static void _M___M_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.M___M_Validate(r);
                }
                private static bool _M___M_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.M___M;
                }
                private static void _M___M_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.M___M = v;
                }
                private static void _M___M_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.M___M_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Entry
                    FT = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Entry(
                        "FT",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._FT_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._FT_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._FT_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._FT_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._FT_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._FT_OnValueChanged);
                private static void _FT_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._FT, sf);
                }
                private static bool _FT_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.FT_IsReadOnly(ref result);
                    return result;
                }
                private static void _FT_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FT_Validate(r);
                }
                private static global::System.Nullable<int> _FT_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.FT;
                }
                private static void _FT_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.FT = v;
                }
                private static void _FT_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.FT_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry
                    TBI = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry(
                        "TBI",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_OnValueChanged);
                private static void _TBI_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._TBI, sf);
                }
                private static bool _TBI_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.TBI_IsReadOnly(ref result);
                    return result;
                }
                private static void _TBI_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TBI_Validate(r);
                }
                private static bool _TBI_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.TBI;
                }
                private static void _TBI_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.TBI = v;
                }
                private static void _TBI_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.TBI_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry
                    TBI_f_u_complete = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry(
                        "TBI_f_u_complete",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_f_u_complete_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_f_u_complete_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_f_u_complete_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_f_u_complete_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_f_u_complete_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._TBI_f_u_complete_OnValueChanged);
                private static void _TBI_f_u_complete_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._TBI_f_u_complete, sf);
                }
                private static bool _TBI_f_u_complete_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.TBI_f_u_complete_IsReadOnly(ref result);
                    return result;
                }
                private static void _TBI_f_u_complete_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TBI_f_u_complete_Validate(r);
                }
                private static bool _TBI_f_u_complete_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.TBI_f_u_complete;
                }
                private static void _TBI_f_u_complete_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.TBI_f_u_complete = v;
                }
                private static void _TBI_f_u_complete_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.TBI_f_u_complete_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    PCP = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "PCP",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_OnValueChanged);
                private static void _PCP_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._PCP, sf);
                }
                private static bool _PCP_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.PCP_IsReadOnly(ref result);
                    return result;
                }
                private static void _PCP_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PCP_Validate(r);
                }
                private static string _PCP_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.PCP;
                }
                private static void _PCP_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PCP = v;
                }
                private static void _PCP_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.PCP_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Address_line__1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Address_line__1",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__1_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__1_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__1_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__1_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__1_OnValueChanged);
                private static void _Address_line__1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Address_line__1, sf);
                }
                private static bool _Address_line__1_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Address_line__1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address_line__1_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address_line__1_Validate(r);
                }
                private static string _Address_line__1_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Address_line__1;
                }
                private static void _Address_line__1_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address_line__1 = v;
                }
                private static void _Address_line__1_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Address_line__1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Address_line__2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Address_line__2",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__2_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__2_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__2_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__2_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__2_OnValueChanged);
                private static void _Address_line__2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Address_line__2, sf);
                }
                private static bool _Address_line__2_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Address_line__2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address_line__2_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address_line__2_Validate(r);
                }
                private static string _Address_line__2_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Address_line__2;
                }
                private static void _Address_line__2_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address_line__2 = v;
                }
                private static void _Address_line__2_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Address_line__2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Address_line__3 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Address_line__3",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__3_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__3_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__3_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__3_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__3_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Address_line__3_OnValueChanged);
                private static void _Address_line__3_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Address_line__3, sf);
                }
                private static bool _Address_line__3_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Address_line__3_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address_line__3_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address_line__3_Validate(r);
                }
                private static string _Address_line__3_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Address_line__3;
                }
                private static void _Address_line__3_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address_line__3 = v;
                }
                private static void _Address_line__3_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Address_line__3_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry
                    Preferred_1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry(
                        "Preferred_1",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_1_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_1_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_1_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_1_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_1_OnValueChanged);
                private static void _Preferred_1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Preferred_1, sf);
                }
                private static bool _Preferred_1_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Preferred_1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Preferred_1_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Preferred_1_Validate(r);
                }
                private static bool _Preferred_1_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Preferred_1;
                }
                private static void _Preferred_1_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Preferred_1 = v;
                }
                private static void _Preferred_1_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Preferred_1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    E_mail = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "E_mail",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._E_mail_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._E_mail_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._E_mail_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._E_mail_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._E_mail_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._E_mail_OnValueChanged);
                private static void _E_mail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._E_mail, sf);
                }
                private static bool _E_mail_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.E_mail_IsReadOnly(ref result);
                    return result;
                }
                private static void _E_mail_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.E_mail_Validate(r);
                }
                private static string _E_mail_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.E_mail;
                }
                private static void _E_mail_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.E_mail = v;
                }
                private static void _E_mail_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.E_mail_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry
                    Preferred_2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry(
                        "Preferred_2",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_2_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_2_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_2_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_2_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_2_OnValueChanged);
                private static void _Preferred_2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Preferred_2, sf);
                }
                private static bool _Preferred_2_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Preferred_2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Preferred_2_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Preferred_2_Validate(r);
                }
                private static bool _Preferred_2_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Preferred_2;
                }
                private static void _Preferred_2_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Preferred_2 = v;
                }
                private static void _Preferred_2_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Preferred_2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Tel = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Tel",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Tel_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Tel_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Tel_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Tel_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Tel_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Tel_OnValueChanged);
                private static void _Tel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Tel, sf);
                }
                private static bool _Tel_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Tel_IsReadOnly(ref result);
                    return result;
                }
                private static void _Tel_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Tel_Validate(r);
                }
                private static string _Tel_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Tel;
                }
                private static void _Tel_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Tel = v;
                }
                private static void _Tel_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Tel_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry
                    Preferred_3 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry(
                        "Preferred_3",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_3_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_3_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_3_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_3_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_3_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Preferred_3_OnValueChanged);
                private static void _Preferred_3_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Preferred_3, sf);
                }
                private static bool _Preferred_3_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Preferred_3_IsReadOnly(ref result);
                    return result;
                }
                private static void _Preferred_3_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Preferred_3_Validate(r);
                }
                private static bool _Preferred_3_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Preferred_3;
                }
                private static void _Preferred_3_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Preferred_3 = v;
                }
                private static void _Preferred_3_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Preferred_3_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    Referring_Phys = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "Referring_Phys",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Referring_Phys_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Referring_Phys_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Referring_Phys_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Referring_Phys_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Referring_Phys_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._Referring_Phys_OnValueChanged);
                private static void _Referring_Phys_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._Referring_Phys, sf);
                }
                private static bool _Referring_Phys_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.Referring_Phys_IsReadOnly(ref result);
                    return result;
                }
                private static void _Referring_Phys_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Referring_Phys_Validate(r);
                }
                private static string _Referring_Phys_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.Referring_Phys;
                }
                private static void _Referring_Phys_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Referring_Phys = v;
                }
                private static void _Referring_Phys_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.Referring_Phys_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    BC_notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "BC_notes",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._BC_notes_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._BC_notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._BC_notes_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._BC_notes_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._BC_notes_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._BC_notes_OnValueChanged);
                private static void _BC_notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._BC_notes, sf);
                }
                private static bool _BC_notes_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.BC_notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _BC_notes_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BC_notes_Validate(r);
                }
                private static string _BC_notes_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.BC_notes;
                }
                private static void _BC_notes_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BC_notes = v;
                }
                private static void _BC_notes_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.BC_notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry
                    KJB_notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Entry(
                        "KJB_notes",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._KJB_notes_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._KJB_notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._KJB_notes_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._KJB_notes_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._KJB_notes_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._KJB_notes_OnValueChanged);
                private static void _KJB_notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._KJB_notes, sf);
                }
                private static bool _KJB_notes_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.KJB_notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _KJB_notes_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.KJB_notes_Validate(r);
                }
                private static string _KJB_notes_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.KJB_notes;
                }
                private static void _KJB_notes_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, string v)
                {
                    d.ImplementationEntity.KJB_notes = v;
                }
                private static void _KJB_notes_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.KJB_notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry
                    PCP_f_u_done = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Entry(
                        "PCP_f_u_done",
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_f_u_done_Stub,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_f_u_done_ComputeIsReadOnly,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_f_u_done_Validate,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_f_u_done_GetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_f_u_done_SetImplementationValue,
                        global::LightSwitchApplication.Patient_Main.DetailsClass.PropertySetProperties._PCP_f_u_done_OnValueChanged);
                private static void _PCP_f_u_done_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Patient_Main.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Patient_Main.DetailsClass d, object sf)
                {
                    c(d, ref d._PCP_f_u_done, sf);
                }
                private static bool _PCP_f_u_done_ComputeIsReadOnly(global::LightSwitchApplication.Patient_Main e)
                {
                    bool result = false;
                    e.PCP_f_u_done_IsReadOnly(ref result);
                    return result;
                }
                private static void _PCP_f_u_done_Validate(global::LightSwitchApplication.Patient_Main e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PCP_f_u_done_Validate(r);
                }
                private static bool _PCP_f_u_done_GetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d)
                {
                    return d.ImplementationEntity.PCP_f_u_done;
                }
                private static void _PCP_f_u_done_SetImplementationValue(global::LightSwitchApplication.Patient_Main.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.PCP_f_u_done = v;
                }
                private static void _PCP_f_u_done_OnValueChanged(global::LightSwitchApplication.Patient_Main e)
                {
                    e.PCP_f_u_done_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Data _ID1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Last_Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _First_Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _MR;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Age;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Admit_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Floor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Data _Bed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Staff;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Op_Res;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Op_Res_2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Consult_Inpatient;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Diagnosis;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Procedures;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Note;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data _Discharged;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Discharge_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data _Complication;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Complication__1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Complication__2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Complication_Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Research_Pt;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data _M___M;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, global::System.Nullable<int>>.Data _FT;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data _TBI;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data _TBI_f_u_complete;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _PCP;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Address_line__1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Address_line__2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Address_line__3;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data _Preferred_1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _E_mail;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data _Preferred_2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Tel;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data _Preferred_3;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _Referring_Phys;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _BC_notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, string>.Data _KJB_notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Patient_Main, global::LightSwitchApplication.Patient_Main.DetailsClass, bool>.Data _PCP_f_u_done;
            
        }
    
        #endregion
    }
    
    #endregion
}
